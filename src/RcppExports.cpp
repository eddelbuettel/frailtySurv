// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// dgamma_
NumericVector dgamma_(NumericVector x, double theta);
RcppExport SEXP frailtyr_dgamma_(SEXP xSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    __result = Rcpp::wrap(dgamma_(x, theta));
    return __result;
END_RCPP
}
// deriv_dgamma
double deriv_dgamma(double x, double theta);
RcppExport SEXP frailtyr_deriv_dgamma(SEXP xSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    __result = Rcpp::wrap(deriv_dgamma(x, theta));
    return __result;
END_RCPP
}
// psi
double psi(double theta, int N_dot, double H_dot, String frailty_distr);
RcppExport SEXP frailtyr_psi(SEXP thetaSEXP, SEXP N_dotSEXP, SEXP H_dotSEXP, SEXP frailty_distrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N_dot(N_dotSEXP);
    Rcpp::traits::input_parameter< double >::type H_dot(H_dotSEXP);
    Rcpp::traits::input_parameter< String >::type frailty_distr(frailty_distrSEXP);
    __result = Rcpp::wrap(psi(theta, N_dot, H_dot, frailty_distr));
    return __result;
END_RCPP
}
// baseline_hazard_estimator
Rcpp::List baseline_hazard_estimator(Rcpp::List X_, Rcpp::List k_, NumericVector d_, Rcpp::List Y_, Rcpp::List N_dot, NumericVector beta, double theta, String frailty_distr);
RcppExport SEXP frailtyr_baseline_hazard_estimator(SEXP X_SEXP, SEXP k_SEXP, SEXP d_SEXP, SEXP Y_SEXP, SEXP N_dotSEXP, SEXP betaSEXP, SEXP thetaSEXP, SEXP frailty_distrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type k_(k_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d_(d_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type Y_(Y_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type N_dot(N_dotSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< String >::type frailty_distr(frailty_distrSEXP);
    __result = Rcpp::wrap(baseline_hazard_estimator(X_, k_, d_, Y_, N_dot, beta, theta, frailty_distr));
    return __result;
END_RCPP
}
// U_r
double U_r(Rcpp::List R_, Rcpp::List N_dot, Rcpp::List I_, Rcpp::List X_, Rcpp::List H_, Rcpp::List H_dot, NumericVector beta, double theta, int beta_idx, String frailty_distr);
RcppExport SEXP frailtyr_U_r(SEXP R_SEXP, SEXP N_dotSEXP, SEXP I_SEXP, SEXP X_SEXP, SEXP H_SEXP, SEXP H_dotSEXP, SEXP betaSEXP, SEXP thetaSEXP, SEXP beta_idxSEXP, SEXP frailty_distrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type R_(R_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type N_dot(N_dotSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type I_(I_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type H_(H_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type H_dot(H_dotSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type beta_idx(beta_idxSEXP);
    Rcpp::traits::input_parameter< String >::type frailty_distr(frailty_distrSEXP);
    __result = Rcpp::wrap(U_r(R_, N_dot, I_, X_, H_, H_dot, beta, theta, beta_idx, frailty_distr));
    return __result;
END_RCPP
}
// U_p
double U_p(Rcpp::List R_, Rcpp::List N_dot, Rcpp::List I_, Rcpp::List X_, Rcpp::List H_, Rcpp::List H_dot, NumericVector beta, double theta, int theta_idx, int tau_k, String frailty_distr);
RcppExport SEXP frailtyr_U_p(SEXP R_SEXP, SEXP N_dotSEXP, SEXP I_SEXP, SEXP X_SEXP, SEXP H_SEXP, SEXP H_dotSEXP, SEXP betaSEXP, SEXP thetaSEXP, SEXP theta_idxSEXP, SEXP tau_kSEXP, SEXP frailty_distrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type R_(R_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type N_dot(N_dotSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type I_(I_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type H_(H_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type H_dot(H_dotSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type theta_idx(theta_idxSEXP);
    Rcpp::traits::input_parameter< int >::type tau_k(tau_kSEXP);
    Rcpp::traits::input_parameter< String >::type frailty_distr(frailty_distrSEXP);
    __result = Rcpp::wrap(U_p(R_, N_dot, I_, X_, H_, H_dot, beta, theta, theta_idx, tau_k, frailty_distr));
    return __result;
END_RCPP
}
// log_likelihood
double log_likelihood(NumericVector beta, double theta, NumericVector lambda, List H_dot, List I_, List R_, List X_, List N_dot, String frailty_distr);
RcppExport SEXP frailtyr_log_likelihood(SEXP betaSEXP, SEXP thetaSEXP, SEXP lambdaSEXP, SEXP H_dotSEXP, SEXP I_SEXP, SEXP R_SEXP, SEXP X_SEXP, SEXP N_dotSEXP, SEXP frailty_distrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type H_dot(H_dotSEXP);
    Rcpp::traits::input_parameter< List >::type I_(I_SEXP);
    Rcpp::traits::input_parameter< List >::type R_(R_SEXP);
    Rcpp::traits::input_parameter< List >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< List >::type N_dot(N_dotSEXP);
    Rcpp::traits::input_parameter< String >::type frailty_distr(frailty_distrSEXP);
    __result = Rcpp::wrap(log_likelihood(beta, theta, lambda, H_dot, I_, R_, X_, N_dot, frailty_distr));
    return __result;
END_RCPP
}
